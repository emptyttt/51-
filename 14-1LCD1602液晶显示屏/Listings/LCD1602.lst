C51 COMPILER V9.60.7.0   LCD1602                                                           08/27/2024 16:47:25 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\LCD1602.obj
COMPILER INVOKED BY: D:\Program Files\keil5\C51\BIN\C51.EXE LCD1602.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(
                    -.\Listings\LCD1602.lst) OBJECT(.\Objects\LCD1602.obj)

line level    source

   1          #include <REGX52.H>
   2          
   3          sbit LCD_RS=P2^6;
   4          sbit LCD_RW=P2^5;
   5          sbit LCD_E=P2^7;
   6          
   7          #define LCD_DataPort P0
   8          
   9          void LCD_Delay(void)    //@11.0592MHz
  10          {
  11   1              unsigned char data i, j;
  12   1      
  13   1              i = 2;
  14   1              j = 199;
  15   1              do
  16   1              {
  17   2                      while (--j);
  18   2              } while (--i);
  19   1      }
  20          
  21          void LCD_WriteCommand(unsigned char Command)
  22          {
  23   1              LCD_RS=0;
  24   1              LCD_RW=0;
  25   1              LCD_DataPort=Command;
  26   1              LCD_E=1;
  27   1              LCD_Delay();
  28   1              LCD_E=0;
  29   1              LCD_Delay();
  30   1      }
  31          
  32          void LCD_WriteData(unsigned char Data)
  33          {
  34   1              LCD_RS=1;
  35   1              LCD_RW=0;
  36   1              LCD_DataPort=Data;
  37   1              LCD_E=1;
  38   1              LCD_Delay();
  39   1              LCD_E=0;
  40   1              LCD_Delay();
  41   1      }
  42          
  43          void LCD_Init()
  44          {
  45   1              LCD_WriteCommand(0x38);//八位数据接口，两行显示，5*7点阵
  46   1              LCD_WriteCommand(0x0C);
  47   1              LCD_WriteCommand(0x06);
  48   1              LCD_WriteCommand(0x01);
  49   1      }
  50          
  51          void  LCD_SetCursor(unsigned char Line,unsigned char Column)
  52          {
  53   1              if(Line==1)
  54   1              {
C51 COMPILER V9.60.7.0   LCD1602                                                           08/27/2024 16:47:25 PAGE 2   

  55   2                      LCD_WriteCommand(0x80|Column-1);
  56   2              }
  57   1              else
  58   1              {
  59   2                      LCD_WriteCommand(0x80|(Column-1)+0x40);
  60   2              }
  61   1      }
  62          void LCD_ShowChar(unsigned char Line,unsigned char Column,unsigned char Char)
  63          {
  64   1              LCD_SetCursor(Line,Column);
  65   1              LCD_WriteData(Char);
  66   1              
  67   1      }
  68          
  69          void LCD_ShowString(unsigned char Line,unsigned char Column,unsigned char *String)
  70          {
  71   1              unsigned char i;
  72   1              
  73   1              LCD_SetCursor(Line,Column);
  74   1              for(i=0;String[i]!='\0';i++)
  75   1              {
  76   2                      LCD_WriteData(String[i]);
  77   2              }
  78   1              
  79   1      }
  80          int LCD_Pow(int x,int Y)
  81          {
  82   1              unsigned char i;
  83   1              int Result=1;
  84   1              for(i=0;i<Y;i++)
  85   1              {
  86   2                      Result*=x;
  87   2              }
  88   1              return Result;
  89   1      }
  90          
  91          void LCD_ShowNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
  92          {
  93   1              unsigned char i;
  94   1              LCD_SetCursor(Line,Column);
  95   1              for(i=Length;i>0;i--)
  96   1              {
  97   2                      LCD_WriteData(0x30+Number/LCD_Pow(10,i-1)%10);//char类型或者直接+'0'
  98   2              }
  99   1      }
 100          
 101          void LCD_ShowSignedNum(unsigned char Line,unsigned char Column,int Number,unsigned char Length)
 102          {
 103   1              unsigned char i;
 104   1              unsigned int Number1;
 105   1              
 106   1              LCD_SetCursor(Line,Column);
 107   1      
 108   1              if(Number>=0)
 109   1              {
 110   2                      LCD_WriteData('+');
 111   2                      Number1=Number;
 112   2              }
 113   1              else
 114   1              {
 115   2                      LCD_WriteData('-');
 116   2                      Number1=-Number;
C51 COMPILER V9.60.7.0   LCD1602                                                           08/27/2024 16:47:25 PAGE 3   

 117   2              }
 118   1              for(i=Length;i>0;i--)
 119   1              {
 120   2                      LCD_WriteData(0x30+Number1/LCD_Pow(10,i-1)%10);//char类型或者直接+'0'
 121   2              }
 122   1      }
 123          
 124          void LCD_ShowHexNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
 125          {
 126   1              unsigned char i;
 127   1              unsigned char SingleNumber;
 128   1              LCD_SetCursor(Line,Column);
 129   1              for(i=Length;i>0;i--)
 130   1              {
 131   2                      SingleNumber=Number/LCD_Pow(16,i-1)%16;//char类型或者直接+'0'
 132   2                      if(SingleNumber<10)
 133   2                      {
 134   3                              LCD_WriteData(0x30+SingleNumber);
 135   3                      }
 136   2                      else
 137   2                      {
 138   3                              LCD_WriteData('A'+SingleNumber-10);
 139   3      
 140   3                      }
 141   2              }
 142   1      }
 143          
 144          void LCD_ShowBinNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
 145          {
 146   1              unsigned char i;
 147   1              LCD_SetCursor(Line,Column);
 148   1              for(i=Length;i>0;i--)
 149   1              {
 150   2                      LCD_WriteData(0x30+Number/LCD_Pow(2,i-1)%2);//char类型或者直接+'0'
 151   2              }
 152   1      }
 153                  


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    387    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      29
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
